###
# ```{rubric} Redis Chart Default Values
# ```
# ---
# This values file provides reasonable defaults for a Redis deployment.
#
# This is a YAML-formatted file.
#
# Declare variables to be passed into your templates.
#
# ```{code-block} yaml
# :caption: affinity example
# nodeAffinity:
#   requiredDuringSchedulingIgnoredDuringExecution:
#     nodeSelectorTerms:
#     - matchExpressions:
#       - key: kubernetes.io/os
#         operator: In
#         values:
#         - linux
# ```
#
# ```{literalinclude} /values.yaml
# :language: yaml
# :start-at: "affinity: {}\n"
# :end-before: "###\n"
# ```
affinity: {}
fullnameOverride: "redis"
image:
  pullPolicy: IfNotPresent
  repository: redis
  # Overrides the image tag whose default is the chart appVersion.
  tag: "alpine"
imagePullSecrets: []
labels:
  app.kubernetes.io/component: datastore
  app.kubernetes.io/instance: redis
  app.kubernetes.io/name: redis
livenessProbe:
  exec:
    command:
    - redis-cli
    - ping
  # When to give up and restart the container
  failureThreshold: 3
  # Delay before the first probe is initiated
  initialDelaySeconds: 30
  # How often to perform the probe
  periodSeconds: 10
  # Minimum consecutive successes for the probe to be considered successful after having failed
  successThreshold: 1
  # When the probe times out
  timeoutSeconds: 5
nameOverride: ""
nodeSelector:
  kubernetes.io/hostname: k8s02.breeze-blocks.net
persistence:
  name: redis
  storageClass: csi-lvm-linear
podAnnotations: {}
podLabels:
  app.kubernetes.io/component: datastore
  app.kubernetes.io/instance: redis
  app.kubernetes.io/name: redis
podSecurityContext: {}
# fsGroup: 2000
readinessProbe:
  exec:
    command:
    - redis-cli
    - ping
  # When to give up, marking the Pod as Unready
  failureThreshold: 3
  # Delay before the first probe is initiated, can be shorter than liveness probe
  initialDelaySeconds: 5
  # How often to perform the probe
  periodSeconds: 5
  # Minimum consecutive successes for the probe to be considered successful
  successThreshold: 1
  timeoutSeconds: 1 # When the probe times out
replicaCount: 1

###
# ```{rubric} Resources
# ```
# ---
# We usually recommend not to specify default resources and to leave this
# as a conscious choice for the user. This also increases chances charts
# run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#
# ```{code-block} yaml
# :caption: resources example
#   limits:
#     cpu: 100m
#     memory: 128Mi
#     storage: 50Gi
#   requests:
#     cpu: 100m
#     memory: 128Mi
#     storage: 5Gi
# ```
#
# ```{literalinclude} /values.yaml
# :language: yaml
# :start-at: "resources:\n"
# :end-before: "###\n"
# ```
resources:
  limits:
    cpu: 1
    memory: 2048Mi
  requests:
    cpu: 500m
    memory: 512Mi
    storage: 5Gi



###
# ```{rubric} Security and Service
# ```
# ---
# Restrict capabilities and access for pods.
#
# ```{code-block} yaml
# :caption: security context example
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000
# ```
#
# ```{literalinclude} /values.yaml
# :language: yaml
# :start-at: "securityContext: {}\n"
# :end-before: "###\n"
# ```
securityContext: {}
service:
  name: redis
  port: 6379
  type: LoadBalancer
  loadBalancerIP: 192.168.5.5
  externalIPs:
  - 192.168.5.12
serviceAccount:
  # Annotations to add to the service account
  annotations:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: redis
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated
  # using the fullname template
  name: redis
tolerations: []
type: StatefulSet

###
# ```{rubric} Volume Mounts
# ```
# ---
# Additional volumeMounts on the output Deployment definition.
#
# ```{code-block} yaml
# :caption: volume mounts example
# - mountPath: "/data"
#   name: redis
#   readOnly: false
# ```
#
# ```{literalinclude} /values.yaml
# :language: yaml
# :start-at: "volumeMounts: []\n"
# :end-before: "###\n"
# ```
volumeMounts: []

###
# ```{rubric} Volumes
# ```
# ---
# Additional volumes on the output Deployment definition.
#
# ```{code-block} yaml
# :caption: volumes example
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false
# - mountPath: "/mnt/usb/redis"
#   name: redis
#   readOnly: false
# ```
#
# ```{literalinclude} /values.yaml
# :language: yaml
# :start-at: "volumes: []\n"
# ```
volumes: []
